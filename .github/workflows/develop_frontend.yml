name: フロントエンド開発環境　Azure Static Web Apps CI/CD

on:
  # 自動デプロイ（developブランチへのプッシュ時）
  push:
    branches:
      - develop
    paths:
      - 'frontend/**'
  
  # プルリクエスト時のデプロイ
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - develop
    paths:
      - 'frontend/**'
  
  # 手動デプロイ（GitHub画面上から実行可能）
  workflow_dispatch:
    inputs:
      environment:
        description: 'デプロイ環境'
        required: true
        default: 'development'
        type: choice
        options:
          - development
          - staging
          - production
      force_rebuild:
        description: '強制リビルド'
        required: false
        default: false
        type: boolean

jobs:
  # 自動デプロイジョブ
  build_and_deploy_job:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions: read
      deployments: write
      id-token: write    
    name: Build and Deploy Job (Development)
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Verify frontend directory structure
        run: |
          echo "📁 現在のディレクトリ: $(pwd)"
          echo "📦 ディレクトリ構造確認:"
          ls -la
          echo "📦 frontend ディレクトリ確認:"
          ls -la frontend/ || echo "❌ frontend ディレクトリが見つかりません"

      - name: Install dependencies
        run: |
          cd frontend
          echo "📦 npm バージョン確認:"
          npm --version
          echo "📦 依存関係のインストール開始..."
          npm install --no-optional
        env:
          NODE_ENV: development
          NEXT_PUBLIC_BUILD_ENVIRONMENT: development
          NEXT_PUBLIC_DEPLOY_ENVIRONMENT: development
          NEXT_PUBLIC_APP_ENVIRONMENT: development

      - name: Build application
        run: |
          cd frontend
          echo "🔨 アプリケーションのビルド開始..."
          npm run build
        env:
          NODE_ENV: development
          NEXT_PUBLIC_BUILD_ENVIRONMENT: development
          NEXT_PUBLIC_DEPLOY_ENVIRONMENT: development
          NEXT_PUBLIC_APP_ENVIRONMENT: development

      - name: Deploy to Azure Static Web Apps
        id: builddeploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_BRAVE_SEA_038F17A00 }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          action: "upload"
          app_location: "/frontend"
          api_location: ""
          output_location: "out"
          deployment_environment: development

      - name: Deploy Status
        run: |
          echo "✅ デプロイ完了: ${{ steps.builddeploy.outputs.app_url }}"
          echo "🌐 環境: development"
          echo "📦 ビルドID: ${{ steps.builddeploy.outputs.build_id }}"

  # 手動デプロイジョブ
  manual_deploy_job:
    if: github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions: read
      deployments: write
      id-token: write
    name: Manual Deploy Job
    environment: ${{ github.event.inputs.environment }}
    steps:
      - name: Environment validation
        run: |
          echo "🔍 環境検証中..."
          if [ "${{ github.event.inputs.environment }}" = "production" ]; then
            echo "⚠️ 本番環境へのデプロイを確認中..."
            echo "🔒 本番環境へのデプロイには特別な権限が必要です"
            # 本番環境へのデプロイは手動確認が必要
            if [ "${{ github.actor }}" != "fukuda1207" ]; then
              echo "❌ 本番環境へのデプロイ権限がありません"
              exit 1
            fi
            echo "✅ 本番環境へのデプロイが承認されました"
          else
            echo "✅ 環境: ${{ github.event.inputs.environment }}"
          fi

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Verify frontend directory structure
        run: |
          echo "📁 現在のディレクトリ: $(pwd)"
          echo "📦 ディレクトリ構造確認:"
          ls -la
          echo "📦 frontend ディレクトリ確認:"
          ls -la frontend/ || echo "❌ frontend ディレクトリが見つかりません"

      - name: Install dependencies
        run: |
          cd frontend
          echo "📦 npm バージョン確認:"
          npm --version
          echo "📦 依存関係のインストール開始..."
          npm install --no-optional
        env:
          NODE_ENV: ${{ github.event.inputs.environment }}
          NEXT_PUBLIC_BUILD_ENVIRONMENT: ${{ github.event.inputs.environment }}
          NEXT_PUBLIC_DEPLOY_ENVIRONMENT: ${{ github.event.inputs.environment }}
          NEXT_PUBLIC_APP_ENVIRONMENT: ${{ github.event.inputs.environment }}

      - name: Build application
        run: |
          cd frontend
          echo "🔨 アプリケーションのビルド開始..."
          npm run build
        env:
          NODE_ENV: ${{ github.event.inputs.environment }}
          NEXT_PUBLIC_BUILD_ENVIRONMENT: ${{ github.event.inputs.environment }}
          NEXT_PUBLIC_DEPLOY_ENVIRONMENT: ${{ github.event.inputs.environment }}
          NEXT_PUBLIC_APP_ENVIRONMENT: ${{ github.event.inputs.environment }}

      - name: Deploy to Azure Static Web Apps
        id: manualdeploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_BRAVE_SEA_038F17A00 }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          action: "upload"
          app_location: "/frontend"
          api_location: ""
          output_location: "out"
          deployment_environment: ${{ github.event.inputs.environment }}

      - name: Deploy Status
        run: |
          echo "✅ 手動デプロイ完了"
          echo "🌐 環境: ${{ github.event.inputs.environment }}"
          echo "🔗 URL: ${{ steps.manualdeploy.outputs.app_url }}"
          echo "📦 ビルドID: ${{ steps.manualdeploy.outputs.build_id }}"
          echo "👤 実行者: ${{ github.actor }}"
          echo "📅 実行日時: $(date)"

  # プルリクエストクローズ時のクリーンアップ
  close_pull_request_job:
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    name: Close Pull Request Job
    steps:
      - name: Close Pull Request
        id: closepullrequest
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_BRAVE_SEA_038F17A00 }}
          action: "close"